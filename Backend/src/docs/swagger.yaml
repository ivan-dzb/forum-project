swagger: "2.0"
info:
  description: "Insert description here"
  version: "0.0.0.1ht"
  title: "PIGGRAM"
  termsOfService: "Insert link to term of services"
  contact:
    email: "Insert email here"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
tags:
  - name: "user"
    description: "Operations about user"
  - name: "post"
    description: "Operations about posts"
  - name: "comment"
    description: "Operations about comment"
  - name: "likes"
    description: "Operations about likes"
  - name: "follows"
    description: "Operations about follows"

schemes:
  - "https"
  - "http"
paths:
  /user/:
    post:
      tags:
        - "user"
      summary: "Creates a new account and logs in"
      description: ""
      operationId: "signup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User information"
          required: true
          schema:
            $ref: "#/definitions/UserSignup"
      responses:
        "200":
          description: "User created"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /user/profilePicture:
    post:
      tags:
        - "user"
      summary: "Upload user image"
      description: ""
      operationId: "Upload"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User credentials"
          required: true
          schema:
            $ref: "#/definitions/UserCredentials"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /user/search?q=query:
    get:
      tags:
        - "user"
      summary: "Search a user by username or name"
      description: ""
      operationId: "Search"
      consumes:
        - "application/json"
      produces:
        - "application/json"

      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /user:
    get:
      tags:
        - "user"
      summary: "Get the session user"
      description: ""
      operationId: "getUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/definitions/User"
        400:
          description: "Invalid input"
        401:
          description: "unauthenticated"
        403:
          description: "Forbidden"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /user/:id:
    get:
      tags:
        - "user"
      summary: "Gets specified user"
      description: ""
      operationId: "getById"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "brief"
          required: true
          type: "boolean"
          description: "If set, will return only username and image"
        - in: "path"
          name: "id"
          required: true
          type: "String"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/definitions/User"
        400:
          description: "Invalid input"
        401:
          description: "unauthenticated"
        403:
          description: "Forbidden"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    put:
      tags:
        - "user"
      summary: "Edits your user"
      description: ""
      operationId: "modifyUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: "String"
        - in: "body"
          name: "body"
          description: "User information"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
        "401":
          description: "unauthenticated"
        "403":
          description: "Forbidden"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    delete:
      tags:
        - "user"
      summary: "Delete your user"
      description: ""
      operationId: "deleteUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: "String"
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
        "401":
          description: "unauthenticated"
        "403":
          description: "Forbidden"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /posts:
    get:
      tags:
        - "post"
      summary: "Returns feed of posts"
      description: ""
      operationId: "getPosts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  schema:
                    $ref: "#/definitions/Post"
        "405":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    post:
      tags:
        - "post"
      summary: "Creates new post"
      description: ""
      operationId: "createPost"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Post information"
          required: true
          schema:
            $ref: "#/definitions/NewPost"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /posts/:id:
    put:
      tags:
        - "post"
      summary: "Updates existing post"
      description: ""
      operationId: "updatePost"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
        - in: "body"
          name: "body"
          description: "Post information"
          required: true
          schema:
            $ref: "#/definitions/NewPost"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    delete:
      tags:
        - "post"
      summary: "Remove existing post"
      description: ""
      operationId: "deletePost"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    get:
      tags:
        - "post"
      summary: "Get existing post"
      description: ""
      operationId: "deletePost"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /posts/users/userId:
    get:
      tags:
        - "post"
      summary: "Returns posts of specified user"
      description: ""
      operationId: "getUserPosts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "userId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /comments/:postId:
    get:
      tags:
        - "comment"
      summary: "Returns specified comment"
      operationId: "getComment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "commentId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /comments:
    post:
      tags:
        - "comment"
      summary: "Post specified comment"
      operationId: "PostComments"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
        - in: "body"
          name: "body"
          description: "Comment information"
          required: true
          schema:
            $ref: "#/definitions/NewComment"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /comments/:commentId:
    delete:
      tags:
        - "comment"
      summary: "Remove your comment"
      operationId: "removeComment"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "commentId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /likes/post/:postId:
    get:
      tags:
        - "likes"
      summary: "Get the likes based on the post"
      operationId: "getLikes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /likes/user/:userId:
    get:
      tags:
        - "likes"
      summary: "Get likes based on user"
      operationId: "getLikes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /likes/post/:postId/count:
    get:
      tags:
        - "likes"
      summary: "Returns post's count of likes"
      operationId: "getLikes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /likes/:postId:
    get:
      tags:
        - "likes"
      summary: "Check that the post exists"
      operationId: "getLikes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    post:
      tags:
        - "likes"
      summary: "Add a like to specified post"
      operationId: "addLikes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    delete:
      tags:
        - "likes"
      summary: "Remove like from specified post"
      operationId: "removeLike"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /follows/:id:
    post:
      tags:
        - "follows"
      summary: "add current user to specified user followers list"
      operationId: "addFollower"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
    delete:
      tags:
        - "follows"
      summary: "Remove current user from specified user followers list"
      operationId: "removeFollower"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "postId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

  /follows/:id/followers:
    get:
      tags:
        - "follows"
      summary: "Returns user's list of followers"
      operationId: "getFollows"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "userId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /follows/:id/count/followers:
    get:
      tags:
        - "follows"
      summary: "Returns user's count of followers"
      operationId: "getFollows"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "userId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /follows/:id/following:
    get:
      tags:
        - "follows"
      summary: "Returns user's list of following"
      operationId: "getFollows"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "userId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /follows/:id/count/following:
    get:
      tags:
        - "follows"
      summary: "Returns user's count of following"
      operationId: "getFollows"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "userId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"
  /follows/:id/find:
    get:
      tags:
        - "follows"
      summary: "Returns if user exists"
      operationId: "getFollows"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "userId"
          type: "String"
          required: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid input"
      security:
        - piggram_auth:
            - "write:users"
            - "read:users"

securityDefinitions:
  piggram_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:users: "modify user information"
      read:users: "read user information"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      image:
        type: "string"
  UserCredentials:
    type: "object"
    properties:
      image:
        type: "string"
  UserSignup:
    type: "object"
    properties:
      username:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      image:
        type: "string"
  NewPost:
    type: "object"
    properties:
      image:
        type: "string"
      description:
        type: "string"
  Post:
    type: "object"
    properties:
      image:
        type: "string"
      description:
        type: "string"
      likes:
        type: "int"
      comment:
        type: "string"
      timestamp:
        type: "string"
      userId:
        type: "int"
  NewComment:
    type: "object"
    properties:
      text:
        type: "string"
